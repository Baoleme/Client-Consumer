<template>
  <view class="page-container confirm-order-container">
    <view class="head-bar">
      <view class="back" @tap.stop="back">
        <view class="icon"><i class="iconfont icon-up" /></view>
        <span>返回</span>
      </view>
      <view class="page-title">确认订单</view>
    </view>
    <scroll-view scroll-y class="scroller">
      <view class="scroller-container">
        <view class="header card-container">
          <view class="row table">
            <view class="row-name">就餐位置</view>
            <view class="table-number">
              <view class="number">12</view>
              <span>号桌</span>
            </view>
          </view>
          <view class="divider" />
          <view class="row payment-method">
            <view class="row-name">付款方式</view>
            <view class="weixin-pay">
              <image src="../assets/weixin.png" mode="aspectFill" />
              <span>微信支付</span>
            </view>
          </view>
          <view class="divider" />
          <view class="row notes">
            <view class="row-name">备注</view>
            <input placeholder="口味、偏好、其他要求" placeholder-class="placeholder" bindinput="onNotesInput" />
          </view>
        </view>
        <orderContent basket="true" />
        <view class="confirm-bar">
        </view>
      </view>
    </scroll-view>
    <view class="status-bar">
      <view class="left">
        <view class="price">
          <span>¥</span>{{total}}
        </view>
      </view>
      <view class="right" @tap.stop="ok">支付</view>
    </view>
  </view>
</template>

<style lang="scss">
  @import "../lib/var.scss";

  .confirm-order-container {
    position: relative;
    width: 100%;
    height: 100%;
    > .scroller {
      height: calc(100% - #{$headBarHeight});
      .scroller-container {
        margin: 15rpx 18rpx 150rpx 18rpx;
        width: calc(100% - 36rpx);
        > .header {
          color: #606060;
          font-size: 30rpx;
          > .row {
            width: 100%;
            display: flex;
            justify-content: space-between;
            align-items: center;
            > .row-name {
              letter-spacing: 1.15rpx;
            }
          }
          > .table > .table-number {
            @include center-flex;
            font-weight: bold;
            letter-spacing: 1.15rpx;
            > .number {
              font-size: 38rpx;
              color: #fe8966;
              margin-right: 6rpx;
            }
          }
          > .payment-method > .weixin-pay {
            @include center-flex;
            image {
              height: 30rpx;
              width: 30rpx;
              margin-right: 16rpx;
            }
          }
          > .notes {
            input {
              text-align: right;
              width: 560rpx;
            }
            .placeholder {
              color: #c8c8c8;
            }
          }
        }
      }
    }

    > .status-bar {
      position: absolute;
      bottom: 30rpx;
      left: 0;
      right: 0;
      margin-left: auto;
      margin-right: auto;
      background-image: linear-gradient(-106deg, #ff5639 0%, #fd6e6a 99%);
      box-shadow: 0 2px 10px 0 rgba(252, 193, 56, 0.63), 0 8px 20px 0 rgba(255, 144, 24, 0.33);
      border-radius: 25rpx;
      width: 710rpx;
      height: 100rpx;
      display: flex;
      font-weight: bold;
      > .left {
        background-image: linear-gradient(95deg, #fccf31 14%, #fdaa47 100%);
        width: 522rpx;
        height: 100%;
        border-top-left-radius: 25rpx;
        border-bottom-left-radius: 25rpx;
        display: flex;
        align-items: center;
        > .price {
          margin-left: 35rpx;
          font-size: 26px;
          color: #ffffff;
          > span {
            font-size: 36rpx;
            margin-right: 9rpx;
          }
        }
      }
      > .right {
        width: calc(100% - 522rpx);
        @include center-flex;
        font-size: 36rpx;
        color:#ffffff;
      }
    }
  }
</style>

<script>
  import wepy from 'wepy';
  import { connect, getStore } from 'wepy-redux';
  import { createOrder, selectOrderDetail, emptyBasket } from '../store/actions';

  import OrderContent from '../components/OrderContent';
  import RequestMixin from '../mixins/request';

  const store = getStore();

  @connect({
    basketArray (state) {
      return state.menu.basket.toArray().map(v => ({
        ...v,
        item: state.menu.idMap.get(v.id)
      }));
    },
    total (state) {
      return this.basketArray
        .map(o => o.count * o.unitPrice)
        .reduce((x, acc) => x + acc, 0);
    },
    restaurant: 'restaurant',
    rid (state) {
      return state.restaurant.rid;
    },
    tid (state) {
      return state.restaurant.tid;
    }
  })
  export default class ConfirmOrder extends wepy.page {
    config = {}

    mixins = [ RequestMixin ]

    components = {
      orderContent: OrderContent
    }

    data = {
      notes: ''
    }

    methods = {
      onNotesInput ({ detail: { value } }) {
        this.notes = value;
        this.$apply();
      },
      back () {
        wepy.navigateBack();
      },
      async ok () {
        try {
          wepy.showLoading({
            mask: true
          });
          const data = {
            restaurant_id: this.rid,
            table: this.tid,
            dish: this.basketArray.map(o => ({ dish_id: o.id, specifications: o.spec || [], count: o.count })),
            remark: this.notes || null,
            price: this.total
          };
          const { data: created } = await this.$http.post({ url: '/order', data });
          store.dispatch(createOrder(created));
          store.dispatch(selectOrderDetail(created));
          await wepy.redirectTo({
            url: 'orderDetail'
          });
          store.dispatch(emptyBasket());
        } finally {
          wepy.hideLoading();
        }
      }
    }
}
</script>
