<template>
  <view class="page-container page-index">
    <header @navChanged.user="onNavChanged"/>
    <view class="nav-tab nav-1" wx:if="{{nav === 1}}">
      <!-- TODO: use visibility instead of wx:if -->
      <view class="tab-wrapper" wx:if="{{loaded}}">
        <restaurantInfo />
        <menu />
        <cart />
      </view>
      <view class="tab-wrapper scan" wx:else>
        <view class="button" @tap.stop="scan">
          <i class="iconfont icon-scan" />
        </view>
        <view class="hint">扫码开始点餐</view>
      </view>
    </view>
    <view class="nav-tab nav-2" wx:else>
      <view class="tab-wrapper">
        <orderList />
      </view>
    </view>
    <detail />
    <specSelect />
  </view>
</template>

<script>
  import wepy from 'wepy';
  import { connect, getStore } from 'wepy-redux';
  import { updateMenu, updateRestaurant } from '../store/actions';
  import { zipObject } from 'lodash';

  import RequestMixin from '../mixins/request';

  import Header from '../components/Header';
  import RestaurantInfo from '../components/RestaurantInfo';
  import Menu from '../components/menu/Menu';
  import Cart from '../components/cart/Cart';
  import Detail from '../components/Detail';
  import SpecSelect from '../components/SpecSelect';
  import OrderList from '../components/OrderList';

  const store = getStore();

  @connect({
    restaurant: 'restaurant',
    loaded (state) {
      return !!state.restaurant.rid;
    }
  })
  export default class Index extends wepy.page {
    config = {
      navigationBarTitleText: '饱了么'
    }

    mixins = [ RequestMixin ]

    components = {
      header: Header,
      restaurantInfo: RestaurantInfo,
      menu: Menu,
      cart: Cart,
      detail: Detail,
      specSelect: SpecSelect,
      orderList: OrderList
    }

    data = {
      nav: 1,
      mockMenu: {
        '招牌推荐': [
          {
            name: '方鱼炒芥兰',
            image: 'http://ouim3dnf4.bkt.clouddn.com/18-5-6/69615219.jpg',
            description: '做法是方鱼和芥兰一起炒',
            price: 12,
            spiciness: 3, // 辣度0-3
            tags: ['人气推荐', '折扣'],
            spec: [ // 规格
              {
                name: '规格',
                options: [
                  { name: '+桃子果砖', price: 0 },
                  { name: '+橙子果砖', price: 1 },
                  { name: '+柚子果砖', price: 2 }
                ],
                default: 2
              },
              {
                name: '温度',
                options: [
                  { name: '冷', price: 0 },
                  { name: '惹', price: 0 }
                ],
                default: 1
              },
              {
                name: '茶基',
                options: [
                  { name: '乌龙茶乌龙茶乌龙茶乌龙茶', price: 0 },
                  { name: '菊花茶', price: 0 },
                  { name: '红茶', price: 0 },
                  { name: '绿茶', price: 0 }
                ],
                required: true
              }, {
                name: '长测试',
                options: [
                  {
                    name: '12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970',
                    price: 0
                  }, {
                    name: '短',
                    price: 0
                  }
                ]
              }
            ],
            context: {
              count: 0
            }
          },
          {
            name: '方鱼炒芥兰',
            image: 'http://ouim3dnf4.bkt.clouddn.com/18-5-6/69615219.jpg',
            description: '',
            price: 12,
            spiciness: 0, // 辣度0-3
            tags: ['人气推荐', '折扣'],
            spec: null, // 规格
            context: {
              count: 0
            }
          },
          {
            name: '方鱼炒芥兰',
            image: 'http://ouim3dnf4.bkt.clouddn.com/18-5-6/69615219.jpg',
            description: '',
            price: 12,
            spiciness: 0, // 辣度0-3
            tags: ['人气推荐', '折扣'],
            spec: null, // 规格
            context: {
              count: 0
            }
          },
          {
            name: '方鱼炒芥兰',
            image: 'http://ouim3dnf4.bkt.clouddn.com/18-5-6/69615219.jpg',
            description: '',
            price: 12,
            spiciness: 0, // 辣度0-3
            tags: ['人气推荐', '折扣'],
            spec: null, // 规格
            context: {
              count: 0
            }
          },
          {
            name: '方鱼炒芥兰',
            image: 'http://ouim3dnf4.bkt.clouddn.com/18-5-6/69615219.jpg',
            description: '',
            price: 12,
            spiciness: 0, // 辣度0-3
            tags: ['人气推荐', '折扣'],
            spec: null, // 规格
            context: {
              count: 0
            }
          },
          {
            name: '方鱼炒芥兰',
            image: 'http://ouim3dnf4.bkt.clouddn.com/18-5-6/69615219.jpg',
            description: '',
            price: 12,
            spiciness: 0, // 辣度0-3
            tags: ['人气推荐', '折扣'],
            spec: null, // 规格
            context: {
              count: 0
            }
          }
        ],
        '没有好吃的': [
          {
            name: '方鱼炒芥兰',
            image: 'http://ouim3dnf4.bkt.clouddn.com/18-5-6/69615219.jpg',
            description: '做法是方鱼和芥兰一起炒',
            price: 12,
            spiciness: 3, // 辣度0-3
            tags: ['人气推荐', '折扣'],
            spec: null,
            context: {
              count: 0
            }
          }
        ],
        '垃圾wepy': [],
        '长长长长长长长长长长长长': []
      }
    }

    computed = {
    }

    methods = {
      onNavChanged (which) {
        this.nav = which;
      },
      async scan () {
        try {
          const res = await wepy.scanCode();
          const { rid, tid } = parseQueryString(res.path); // rid: 餐厅id; tid: 桌号
          if (rid && tid) {
            try {
              wepy.showLoading({
                mask: true
              });
              // load data
              const { data: { name, dish, logo_url, phone } } = await this.$http(`/restaurant/${rid}`);
              store.dispatch(updateRestaurant({ rid, tid, name, phone, logo: logo_url }));
              store.dispatch(updateMenu(dishDataAdapter(dish)));
            } finally {
              wepy.hideLoading();
            }
          } else {
            wepy.showToast({
              title: '未知二维码',
              image: '../assets/error.png'
            });
          }
        } catch (err) {
          console.error(err);
        }
      }
    }

    async onLoad () {
      this.init();
    }

    async init () {
    }
  }

  function parseQueryString (str) {
    const [, qs] = (str || '').match(/\?(.+)$/) || [];
    if (!qs) return {};
    return qs
      .split('&')
      .filter(k => !!k)
      .map(s => s.split('='))
      .reduce((obj, [k, v]) => (obj[k] = v) && obj, {}); // 搞事，别在意，就只是node里的qs.parse而已
  }

  function dishDataAdapter (dishes) {
    return zipObject(
      dishes.map(o => o.name),
      dishes.map(o => o.dish.map(d => ({
        name: d.name,
        image: (d.image_url && d.image_url[0]) || null,
        description: d.description,
        price: d.price,
        tags: d.tag,
        spec: d.specifications.length ? d.specifications : null,
        context: {
          id: d.dish_id,
          count: 0
        }
      })))
    );
  }
</script>

<style lang="scss">
  @import '../lib/var.scss';

  .page-index {
    height: 100%;
    display: flex;
    flex-direction: column;
    > view {
      flex-shrink: 0;
    }
    > .nav-tab {
      flex-grow: 1;
      position: relative;
      display: flex;
      flex-direction: column;
      > .tab-wrapper {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
      }
      > .tab-wrapper.scan {
        @include center-flex;
        background-color: #ffffff;
        flex-direction: column;
        > .button {
          @include center-flex;
          height: 300rpx;
          width: 300rpx;
          box-shadow: 0 2rpx 10rpx 0 rgba(252, 193, 56, 0.63), 0 5rpx 20rpx 10rpx rgba(255, 139, 24, 0.33);
          border-radius: 50%;
          background-color: #fdc543;
          > i {
            color: white;
            font-size: 150rpx;
          }
        }
        > .hint {
          margin-top: 50rpx;
          color: #606060;
          font-size: 40rpx;
        }
      }
    }
  }
</style>
