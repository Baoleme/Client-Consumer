<style lang="scss">
.container {
  height: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-between;
  box-sizing: border-box;
}
</style>

<script>
import wepy from 'wepy';
import 'wepy-async-function';
import request from './lib/request';
import jar from './lib/cookieJar';

import { setStore } from 'wepy-redux';
import configStore from './store';
import { USER_UPDATE } from './store/types/user';

const store = configStore();
setStore(store);

export default class extends wepy.app {
  config = {
    pages: [
      'pages/index'
    ],
    window: {
      backgroundTextStyle: 'light',
      navigationBarBackgroundColor: '#fff',
      navigationBarTitleText: 'WeChat',
      navigationBarTextStyle: 'black'
    }
  }

  constructor () {
    super();
    this.use('requestfix');
    this.use('promisify');
  }

  async onLaunch () {
    jar.init();

    this.checkLogin();
  }

  async checkLogin () {
    try {
      const { data } = await request('http://localhost:8520/customer/self');
      store.dispatch({ type: USER_UPDATE, payload: { openid: data['openid'] } });
    } catch (err) {
      const { statusCode } = err;
      if (statusCode === 400) {
        // not logged in
        await this.login();
      } else {
        // unknown error
      }
    }
    const { userInfo } = await wepy.getUserInfo();
    store.dispatch({ type: USER_UPDATE, payload: userInfo });
  }

  async login () {
    const { code } = await wepy.login();
    const { data } = await request({
      url: 'http://localhost:8520/customer/session',
      method: 'post',
      data: { code }
    });
    store.dispatch({ type: USER_UPDATE, payload: { openid: data['openid'] } });
  }
}
</script>
