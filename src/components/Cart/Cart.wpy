<template>
  <view class="cart-container {{active ? 'active' : ''}}" @tap="toggle" catchtouchmove="noop" wx:if="{{basketSize !== 0}}">
    <!-- catchtouchmove 用于防止滚动穿透 -->
    <view class="cart-bar">
      <view class="left" @tap.stop="toggle">
        <image src="../../assets/cart.png" />
        <view class="bubble" wx:if="{{basketSize !== 0}}">{{dishCount}}</view>
        <view class="price">
          <span>¥</span>{{total}}
        </view>
      </view>
      <view class="right" @tap="ok">选好了</view>
    </view>
    <view class="cart-float" wx:if="{{active}}" @tap.stop="noop">
      <view class="triangle" />
      <view class="header">
        <view class="left">购物车</view>
        <view class="right" @tap="empty">
          <icon class="iconfont icon-bin" />
          清空
        </view>
      </view>
      <scroll-view class="content" style="height: {{floatHeight}}rpx"  scroll-y="{{floatHeight == 700}}">
        <repeat for="{{basketArray}}" index="index" item="item">
          <view class="cart-item-wrapper">
            <view class="divider" wx:if="{{index !== 0}}"/>
            <cartItem :item="item" />
          </view>
        </repeat>
      </scroll-view>
    </view>
  </view>
</template>

<style lang="scss">
  @import "../../lib/var.scss";

  .cart-container {
    position: absolute;
    margin-left: auto;
    margin-right: auto;
    left: 0;
    right: 0;
    width: 710rpx;
    &.active {
      position: fixed;
      background-color: rgba(0, 0, 0, 0.45);
      top: 0;
      bottom: 0;
      width: 100%;
      .cart-bar, .cart-float {
        left: 0;
        right: 0;
        margin-left: auto;
        margin-right: auto;
      }
      .cart-bar {
        bottom: 27rpx; // 我也不知道为啥，不改成27就会有些许位移
      }
    }
    .cart-bar {
      position: absolute;
      bottom: 30rpx;
      background-image: linear-gradient(-106deg, #ff5639 0%, #fd6e6a 99%);
      box-shadow: 0 2px 10px 0 rgba(252, 193, 56, 0.63), 0 8px 20px 0 rgba(255, 144, 24, 0.33);
      border-radius: 25rpx;
      width: 710rpx;
      height: 100rpx;
      display: flex;
      font-weight: bold;
      > .left {
        background-image: linear-gradient(95deg, #fccf31 14%, #fdaa47 100%);
        width: 522rpx;
        height: 100%;
        border-top-left-radius: 25rpx;
        border-bottom-left-radius: 25rpx;
        display: flex;
        align-items: center;
        > image {
          width: 48rpx;
          height: 48rpx;
          margin: 28rpx;
        }
        > .bubble {
          position: absolute;
          left: 68rpx;
          bottom: 74rpx;
          font-size: 28rpx;
          color: #ffffff;
          letter-spacing: 2.8rpx;
          font-weight: lighter;
          background: #ff693c;
          width: 45rpx;
          height: 45rpx;
          border-radius: 100%;
          @include center-flex;
        }
        > .price {
          font-size: 26px;
          color: #ffffff;
          > span {
            font-size: 36rpx;
            margin-right: 9rpx;
          }
        }
      }
      > .right {
        width: calc(100% - 522rpx);
        @include center-flex;
        font-size: 36rpx;
        color:#ffffff;
      }
    }
    .cart-float {
      position: absolute;
      bottom: 180rpx;
      width: 680rpx;
      background-color: #fff;
      border-radius: 15rpx;
      display: flex;
      flex-direction: column;
      align-items: center;
      > view {
        flex-shrink: 0;
      }
      > .triangle {
        position: absolute;
        width: 0;
        height: 0;
        left: 55rpx;
        bottom: -20rpx;
        transform: rotate(225deg);
        border-width: 25rpx;
        border-color: #fff transparent transparent #fff;
        border-style: solid;
        border-top-left-radius: 10rpx;
      }
      > .header {
        width: calc(100% - 88rpx); // padding有bug，会往外顶
        height: 80rpx;
        background-color: #f9f9f9;
        border-top-left-radius: 15rpx;
        border-top-right-radius: 15rpx;
        padding: 0 44rpx;
        display: flex;
        justify-content: space-between;
        align-items: center;
        > .left {
          font-size: 30rpx;
          color:#606060;
          letter-spacing: 1.15rpx;
          font-weight: bold;
        }
        > .right {
          font-size: 26rpx;
          color: #606060;
          letter-spacing: 1rpx;
          display: flex;
          align-items: center;
          icon {
            font-size: 24rpx;
            color: #aaaaaa;
            margin-right: 9rpx;
            @include center-flex;
          }
        }
      }
      > .content {
        width: 100%;
        height: calc(100% - 80rpx);
        display: flex;
        flex-direction: column;
        align-items: center;
        .divider {
          width: 551rpx;
          height: 3rpx;
          background-color: #ededed;
          margin-left: auto;
          margin-right: auto;
        }
      }
    }
  }
</style>

<script>
import wepy from 'wepy';

import { connect, getStore } from 'wepy-redux';

import { emptyBasket } from '../../store/actions';
import CartItem from './CartItem';

const store = getStore();

@connect({
  basketArray (state) {
    return state.menu.basket.toArray().map(v => ({
      ...v,
      item: state.menu.idMap.get(v.id)
    }));
  },
  total (state) {
    return this.basketArray
      .map(o => o.count * o.unitPrice)
      .reduce((x, acc) => x + acc, 0);
  },
  basketSize (state) {
    return state.menu.basket.size();
  },
  dishCount (state) {
    return this.basketArray.map(o => o.count).reduce((x, acc) => x + acc, 0);
  }
})
export default class Cart extends wepy.component {
  components = {
    cartItem: CartItem
  }

  data = {
    active: false
  }

  onLoad () {
    // for debug
    // setTimeout(() => {
    //   store.dispatch({
    //     type: 'MENU_MODIFY_ITEM_COUNT',
    //     payload: {
    //       id: 2,
    //       modifier: 1
    //     }
    //   });
    //   store.dispatch({
    //     type: 'MENU_MODIFY_ITEM_COUNT',
    //     payload: {
    //       id: 3,
    //       modifier: 1
    //     }
    //   });
    //   store.dispatch({
    //     type: 'MENU_MODIFY_ITEM_COUNT',
    //     payload: {
    //       id: 4,
    //       modifier: 1
    //     }
    //   });
    //   this.$apply();
    // }, 500);
    // setTimeout(() => {
    //   store.dispatch({
    //     type: 'MENU_OPEN_SPEC_SELECT',
    //     payload: { id: 1 }
    //   });
    // }, 500);
  }

  methods = {
    toggle () {
      this.active = !this.active;
      this.$apply();
    },
    noop () {},
    empty () {
      store.dispatch(emptyBasket());
      this.active = !this.active;
      this.$apply();
    },
    ok () {
      // stub
      console.log('select ok');
    }
  }

  computed = {
    floatHeight () {
      return Math.min(700, this.basketSize * 130); // 迷之高度计算式
    }
  }

  watch = {
    'basketSize' (newValue, oldValue) {
      if (newValue === 0) {
        this.active = false;
        this.$apply();
      }
    }
  }
}
</script>
