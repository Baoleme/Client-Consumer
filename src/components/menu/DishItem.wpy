<template>
  <view class="dish-item" @tap="openDetail">
    <image class="image" src="{{item.image}}" mode="aspectFill"/>
    <view class="content">
      <view class="slot">
        <span class="name">{{item.name}}</span>
        <view class="spiciness">
          <repeat for="{{item.spiciness}}" index="index">
            <image src="../assets/chilli.png" class="spicy"/>
          </repeat>
        </view>
      </view>
      <view class="slot"><view class="description">{{item.description}}</view></view>
      <view class="slot"></view>
      <view class="slot">
        <view class="price">
          <span class="pre">¥</span>
          <span class="mid">{{item.price}}</span>
          <span class="post" wx:if="{{!!item.spec}}">起</span>
        </view>
        <view class="dish-counter {{!item.spec ? '' : 'gone'}}" @tap.stop="noop">
          <view class="button minus {{item.context.count !== 0 ? '' : 'gone'}}" @tap.stop="minus">
            <i class="iconfont icon-jianhao"/>
          </view>
          <view class="count {{item.context.count !== 0 ? '' : 'gone'}}">{{item.context.count}}</view>
          <view class="button plus" @tap.stop="plus">
            <i class="iconfont icon-jiahao1"/>
          </view>
        </view>
        <view class="spec-button" wx:if="{{item.spec}}" @tap.stop="selectSpec">
          选规格
        </view>
      </view>
    </view>
  </view>
</template>

<style lang="scss">
  @import "../../lib/var.scss";

  .dish-item {
    height: 150rpx;
    width: 100%;
    margin-bottom: 40rpx;
    display: flex;
    align-items: center;
    > .image {
      height: 150rpx;
      width: 150rpx;
      border-radius: 5rpx;
    }
    > .content {
      width: calc(100% - 150rpx - 47rpx);
      height: 100%;
      margin-left: 17rpx;
      margin-right: 30rpx;
      display: flex;
      flex-direction: column;
      justify-content: space-between;
      > .slot {
        height: calc(100% / 4);
        width: 100%;
        display: flex;
        align-items: center;
        justify-content: space-between;
      }
      > .slot > .name {
        font-size: 32rpx;
        width: 290rpx;
        @include line-limit;
        color: #232323;
        font-weight: bold;
      }
      .spiciness {
        > .spicy {
          width: 27rpx;
          height: 23rpx;
        }
      }
      > .slot > .description {
        width: 100%;
        font-size: 22rpx;
        color: #9b9b9b;
        @include line-limit;
      }
      > .slot > .price {
        color: #fe8966;
        > .pre {
          font-size: 24rpx;
        }
        > .mid {
          font-size: 36rpx;
          font-weight: bold;
        }
        > .post {
          margin-left: 13rpx;
          color: #9b9b9b;
        }
      }
    }
  }

  .dish-counter {
    display: flex;
    align-items: center;
    .button {
      width: 45rpx;
      height: 45rpx;
      border-radius: 15rpx;
      display: flex;
      justify-content: center;
      align-items: center;
      font-weight: bold;
      font-size: 25rpx;
      &.minus {
        background-color: #f5f5f5;
        color: #979797;
      }
      &.plus {
        background-color: #fcc138;
        color: #ffffff;
      }
    }
    .count {
      display: flex;
      width: 36rpx;
      align-items: center;
      justify-content: center;
      font-size: 28rpx;
      color: #606060;
      letter-spacing: 1.08rpx;
      margin: 0 16rpx;
      font-weight: bold;
    }
  }

  .spec-button {
    background-color: #fcc138;
    color: #232323;
    font-size: 24rpx;
    height: 50rpx;
    width: 108rpx;
    border-radius: 12rpx;
    @include center-flex;
  }
</style>

<script>
import wepy from 'wepy';

import { connect, getStore } from 'wepy-redux';
import { modifyItemCount, openDetail, openSpecSelect } from '../../store/actions';

import Counter from './DishCounter';

const store = getStore();

@connect({
})
export default class DishItem extends wepy.component {
  components = {
    counter: Counter
  }

  props = {
    item: Object
  }

  methods = {
    noop () {},
    minus () {
      store.dispatch(modifyItemCount(this.item.context.id, -1));
    },
    plus () {
      store.dispatch(modifyItemCount(this.item.context.id, +1));
    },
    selectSpec () {
      store.dispatch(openSpecSelect(this.item.context.id));
    },
    openDetail () {
      // stub
      store.dispatch(openDetail(this.item.context.id));
    }
  }
}
</script>
